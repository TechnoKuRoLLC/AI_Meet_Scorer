name: Deploy Python OpenAI Lambda on Merge

on:
  push:
    branches:
      - main  # main„Éñ„É©„É≥„ÉÅ„Å∏„ÅÆpush„Åß„Éà„É™„Ç¨„Éº

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List files (debug)
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          ls -R

      - name: Run Amazon Linux 2 Docker build
        run: |
          docker run --rm -v "${{ github.workspace }}":/app -w /app public.ecr.aws/amazonlinux/amazonlinux:2023 bash -c "
            yum -y groupinstall 'Development Tools' &&
            yum -y install gcc openssl-devel bzip2-devel libffi-devel wget make zlib-devel xz-devel zip rust cargo &&
            cd /usr/src &&
            wget https://www.python.org/ftp/python/3.13.1/Python-3.13.1.tgz &&
            tar xzf Python-3.13.1.tgz &&
            cd Python-3.13.1 &&
            ./configure --enable-optimizations &&
            make -j2 &&
            make altinstall &&

            python3.13 -m venv /app/venv &&
            source /app/venv/bin/activate &&
            pip install --upgrade pip &&

            # üí° „Åì„Åì„ÅßÁõ∏ÂØæ„Éë„Çπ„ÇíÁµ∂ÂØæÂåñ„Åô„Çã
            pip install -r /app/functions/call_openai/requirements.txt -t /app/python_lib/ &&

            mkdir -p /app/package &&
            cp /app/functions/call_openai/lambda_function.py /app/package/ &&
            cp -r /app/python_lib/* /app/package/ &&
            cd /app/package &&
            zip -r9 ../function.zip .
          "

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1  # Êù±‰∫¨„É™„Éº„Ç∏„Éß„É≥

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name callopenai \
            --zip-file fileb://function.zip
